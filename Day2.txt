IMP    -/     //Class is a collection of variables and methords
//where Varibles are the  data containers that save the date values during java Program 
      --------   execution.
// where Methords is a block of code which only runs when it is called.
You can resamble Methords as Functions in C++.
//Basic difference between function and methord are 
----------------------------------------------------
i) function is represent out of the class else methord will represent inner the class  
// entity= everything is an entity/-

#  What are the advance feature of  JAVA which is not in C ,C++ ?
 Comparison Index            C++                             JAVA
Platform-Independent     C++ is a PLatform                Java is a platform 
                         dependent                        Independent
Mainly Used For          C++ is mainly used               Java is mainly used
                         for System Programming           for Application Programming
                                                          It is widely used for Windows-based
                                                          web-based, enterprise and Mobile                                                                                                                             Application
Design Goal              C++ was designed for             Java is designed and Created as
                         Systems and Application          an interpreter for Printing 
                         Programming. This was an         Systems but later extended as a
                         extension of C Programming       Support network Computing.
                         language. 
Operator                 C++ Support Operator             Java Doesn't Support Operator
Overloading              Overloading                      Overloading
Multiple                 C++ Supports Multiple            Java Doesn't Supoort Multiple 
Inheritance              Inheritance                      Inheritance Direclty throw the
                                                          Class. Java Achive this with the 
                                                          Concept Multiple Inheritance.
                                            OR
# Features of JAVA 
       
Java is an Object Oriented Language.
the feature of java are as follows:

1) platform Indepandance

Because of the bytecode functionality java is a platform independent
I)Platform nutral

Ii)Architectural Nutral
The term "Architecture Neutral" refers to Java's Ability to Various Hardware and Software platform without modification.

Memory allocaion of variable in java Indepentent of system architecture it means that all the variables 
will allways allocte a constant amount of memory on all the architecture(16 byte,32 byte ,24 byte) 

2) Simple and secure

java is a simple language for an experiance programer
*) Why java is a secure language?
java is secure because ,
a) java does not support pointer variable.
B) it has byte code securaty.
c) it has high encryption standard.

3)Rhobast


                                            ------------------X----------------------
# Properties of Object Orientation in java

1) Class
class is a user defined datatype ,it is a collection of variables and methord.

2)Object
object is a real time(run time) entity.
it is an instance of a class that has a authority to access any content of a class.

3)Abstration/encapsulation
showing only essential features without showing any backgroung detail.
wrapping of data into a single unit is data encapsulation.

4) Inheritance
it is a feature by which a class can acquire(access) a content of another class.

5)Polymorphism         //"Poly" means many
Polymorphism is a fundamental concept in object-oriented programming that allows 
objects to be treated as instances of their parent class rather than their actual class. 

6)Dynamic Binding   //dynamic memory allocation and runtime memory allocation
Dynamic binding in Java, also known as late binding or runtime polymorphism, is a mechanism 
where the method to be called is determined at runtime rather than at compile time

7) Message Passing  //call by value and reaturn by value
In object-oriented programming, communication between objects is a vital aspect of building complex systems.
One of the key mechanisms for achieving this communication is message passing. In Java, message passing 
allows objects to interact with each other by invoking methods and passing data 
between them. In this article, we will explore the concept of message passing in Java 
and demonstrate its usage through example programs.

#  first Program
class First
{
}
